name: Release Please
on:
  push:
    branches:
      - "main"
permissions:
  contents: write
  pull-requests: write
jobs:
  release-pr:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      version: ${{ steps.release.outputs.version }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - name: Create Release PR
        uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GH_TOKEN }}
          config-file: .github/release-please-config.json
          manifest-file: .github/release-please-manifest.json
  release-artifact:
    if: ${{ needs.release-pr.outputs.release_created }}
    runs-on: ubuntu-latest
    needs: release-pr
    steps:
      # Checkout of code
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      # Setup .NET SDK
      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: 9.0.x
          source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Setup cache for NuGet dependencies
      - name: Cache NuGet dependencies
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('./**/*.sln') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      # Restore NuGet dependencies
      - name: Restore
        run: dotnet restore

      # Build application code
      - name: Build
        run: dotnet build --configuration Release --no-restore -p:Version=${{ needs.release-pr.outputs.version }}

      # Build NuGet package
      - name: Package
        run: dotnet pack --configuration Release --no-build -p:Version=${{ needs.release-pr.outputs.version }} -o artifacts

      # Upload build artifact to release
      - name: Upload Release Artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ needs.release-pr.outputs.tag_name }} ./artifacts/Calculator.${{ needs.release-pr.outputs.version }}.nupkg

      # Upload NuGet package
      - name: Publish NuGet
        run: dotnet nuget push artifacts/*.nupkg --api-key ${{ secrets.GITHUB_TOKEN }}
        env:
          PACKAGE_ID: "Calculator"
